[{"D:\\chess\\reactjs-projects\\chess-app\\src\\index.tsx":"1","D:\\chess\\reactjs-projects\\chess-app\\src\\reportWebVitals.ts":"2","D:\\chess\\reactjs-projects\\chess-app\\src\\App.tsx":"3","D:\\chess\\reactjs-projects\\chess-app\\src\\components\\Referee\\Referee.tsx":"4","D:\\chess\\reactjs-projects\\chess-app\\src\\Constants.ts":"5","D:\\chess\\reactjs-projects\\chess-app\\src\\Types.ts":"6","D:\\chess\\reactjs-projects\\chess-app\\src\\components\\Chessboard\\Chessboard.tsx":"7","D:\\chess\\reactjs-projects\\chess-app\\src\\models\\Board.ts":"8","D:\\chess\\reactjs-projects\\chess-app\\src\\models\\Piece.ts":"9","D:\\chess\\reactjs-projects\\chess-app\\src\\models\\Pawn.ts":"10","D:\\chess\\reactjs-projects\\chess-app\\src\\models\\index.ts":"11","D:\\chess\\reactjs-projects\\chess-app\\src\\models\\Position.ts":"12","D:\\chess\\reactjs-projects\\chess-app\\src\\referee\\rules\\index.ts":"13","D:\\chess\\reactjs-projects\\chess-app\\src\\components\\Tile\\Tile.tsx":"14","D:\\chess\\reactjs-projects\\chess-app\\src\\referee\\rules\\KnightRules.ts":"15","D:\\chess\\reactjs-projects\\chess-app\\src\\referee\\rules\\PawnRules.ts":"16","D:\\chess\\reactjs-projects\\chess-app\\src\\referee\\rules\\BishopRules.ts":"17","D:\\chess\\reactjs-projects\\chess-app\\src\\referee\\rules\\RookRules.ts":"18","D:\\chess\\reactjs-projects\\chess-app\\src\\referee\\rules\\QueenRules.ts":"19","D:\\chess\\reactjs-projects\\chess-app\\src\\referee\\rules\\KingRules.ts":"20","D:\\chess\\reactjs-projects\\chess-app\\src\\referee\\rules\\GeneralRules.ts":"21"},{"size":517,"mtime":1694368630219,"results":"22","hashOfConfig":"23"},{"size":440,"mtime":1694368630225,"results":"24","hashOfConfig":"23"},{"size":188,"mtime":1694368630215,"results":"25","hashOfConfig":"23"},{"size":7364,"mtime":1694368630217,"results":"26","hashOfConfig":"23"},{"size":2963,"mtime":1694368630215,"results":"27","hashOfConfig":"23"},{"size":222,"mtime":1694368630215,"results":"28","hashOfConfig":"23"},{"size":4309,"mtime":1694368630217,"results":"29","hashOfConfig":"23"},{"size":8081,"mtime":1694368630220,"results":"30","hashOfConfig":"23"},{"size":1587,"mtime":1694368630220,"results":"31","hashOfConfig":"23"},{"size":630,"mtime":1694368630220,"results":"32","hashOfConfig":"23"},{"size":53,"mtime":1694368630221,"results":"33","hashOfConfig":"23"},{"size":378,"mtime":1694368630221,"results":"34","hashOfConfig":"23"},{"size":183,"mtime":1694368630225,"results":"35","hashOfConfig":"23"},{"size":558,"mtime":1694368630218,"results":"36","hashOfConfig":"23"},{"size":1902,"mtime":1694368630223,"results":"37","hashOfConfig":"23"},{"size":3490,"mtime":1694368630223,"results":"38","hashOfConfig":"23"},{"size":4855,"mtime":1694368630222,"results":"39","hashOfConfig":"23"},{"size":3786,"mtime":1694368630224,"results":"40","hashOfConfig":"23"},{"size":4682,"mtime":1694368630224,"results":"41","hashOfConfig":"23"},{"size":7552,"mtime":1694368630222,"results":"42","hashOfConfig":"23"},{"size":926,"mtime":1694368630222,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"142pc2t",{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\chess\\reactjs-projects\\chess-app\\src\\index.tsx",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\reportWebVitals.ts",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\App.tsx",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\components\\Referee\\Referee.tsx",["87","88","89","90","91","92","93","94","95","96","97","98"],"import { useEffect, useRef, useState } from \"react\";\r\nimport { initialBoard } from \"../../Constants\";\r\nimport { Piece, Position } from \"../../models\";\r\nimport { Board } from \"../../models/Board\";\r\nimport { Pawn } from \"../../models/Pawn\";\r\nimport { bishopMove, getPossibleBishopMoves, getPossibleKingMoves, getPossibleKnightMoves, getPossiblePawnMoves, getPossibleQueenMoves, getPossibleRookMoves, kingMove, knightMove, pawnMove, queenMove, rookMove } from \"../../referee/rules\";\r\nimport { PieceType, TeamType } from \"../../Types\";\r\nimport Chessboard from \"../Chessboard/Chessboard\";\r\n\r\nexport default function Referee() {\r\n    const [board, setBoard] = useState<Board>(initialBoard.clone());\r\n    const [promotionPawn, setPromotionPawn] = useState<Piece>();\r\n    const modalRef = useRef<HTMLDivElement>(null);\r\n    const checkmateModalRef = useRef<HTMLDivElement>(null);\r\n\r\n    function playMove(playedPiece: Piece, destination: Position): boolean {\r\n        // If the playing piece doesn't have any moves return\r\n        if (playedPiece.possibleMoves === undefined) return false;\r\n\r\n        // Prevent the inactive team from playing\r\n        if (playedPiece.team === TeamType.OUR\r\n            && board.totalTurns % 2 !== 1) return false;\r\n        if (playedPiece.team === TeamType.OPPONENT\r\n            && board.totalTurns % 2 !== 0) return false;\r\n\r\n        let playedMoveIsValid = false;\r\n\r\n        const validMove = playedPiece.possibleMoves?.some(m => m.samePosition(destination));\r\n\r\n        if (!validMove) return false;\r\n\r\n        const enPassantMove = isEnPassantMove(\r\n            playedPiece.position,\r\n            destination,\r\n            playedPiece.type,\r\n            playedPiece.team\r\n        );\r\n\r\n        // playMove modifies the board thus we\r\n        // need to call setBoard\r\n        setBoard(() => {\r\n            const clonedBoard = board.clone();\r\n            clonedBoard.totalTurns += 1;\r\n            // Playing the move\r\n            playedMoveIsValid = clonedBoard.playMove(enPassantMove,\r\n                validMove, playedPiece,\r\n                destination);\r\n\r\n            if(clonedBoard.winningTeam !== undefined) {\r\n                checkmateModalRef.current?.classList.remove(\"hidden\");\r\n            }\r\n\r\n            return clonedBoard;\r\n        })\r\n\r\n        // This is for promoting a pawn\r\n        let promotionRow = (playedPiece.team === TeamType.OUR) ? 7 : 0;\r\n\r\n        if (destination.y === promotionRow && playedPiece.isPawn) {\r\n            modalRef.current?.classList.remove(\"hidden\");\r\n            setPromotionPawn((previousPromotionPawn) => {\r\n                const clonedPlayedPiece = playedPiece.clone();\r\n                clonedPlayedPiece.position = destination.clone();\r\n                return clonedPlayedPiece;\r\n            });\r\n        }\r\n\r\n        return playedMoveIsValid;\r\n    }\r\n\r\n    function isEnPassantMove(\r\n        initialPosition: Position,\r\n        desiredPosition: Position,\r\n        type: PieceType,\r\n        team: TeamType\r\n    ) {\r\n        const pawnDirection = team === TeamType.OUR ? 1 : -1;\r\n\r\n        if (type === PieceType.PAWN) {\r\n            if (\r\n                (desiredPosition.x - initialPosition.x === -1 ||\r\n                    desiredPosition.x - initialPosition.x === 1) &&\r\n                desiredPosition.y - initialPosition.y === pawnDirection\r\n            ) {\r\n                const piece = board.pieces.find(\r\n                    (p) =>\r\n                        p.position.x === desiredPosition.x &&\r\n                        p.position.y === desiredPosition.y - pawnDirection &&\r\n                        p.isPawn &&\r\n                        (p as Pawn).enPassant\r\n                );\r\n                if (piece) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    //TODO\r\n    //Add stalemate!\r\n    function isValidMove(initialPosition: Position, desiredPosition: Position, type: PieceType, team: TeamType) {\r\n        let validMove = false;\r\n        switch (type) {\r\n            case PieceType.PAWN:\r\n                validMove = pawnMove(initialPosition, desiredPosition, team, board.pieces);\r\n                break;\r\n            case PieceType.KNIGHT:\r\n                validMove = knightMove(initialPosition, desiredPosition, team, board.pieces);\r\n                break;\r\n            case PieceType.BISHOP:\r\n                validMove = bishopMove(initialPosition, desiredPosition, team, board.pieces);\r\n                break;\r\n            case PieceType.ROOK:\r\n                validMove = rookMove(initialPosition, desiredPosition, team, board.pieces);\r\n                break;\r\n            case PieceType.QUEEN:\r\n                validMove = queenMove(initialPosition, desiredPosition, team, board.pieces);\r\n                break;\r\n            case PieceType.KING:\r\n                validMove = kingMove(initialPosition, desiredPosition, team, board.pieces);\r\n        }\r\n\r\n        return validMove;\r\n    }\r\n\r\n    function promotePawn(pieceType: PieceType) {\r\n        if (promotionPawn === undefined) {\r\n            return;\r\n        }\r\n\r\n        setBoard((previousBoard) => {\r\n            const clonedBoard = board.clone();\r\n            clonedBoard.pieces = clonedBoard.pieces.reduce((results, piece) => {\r\n                if (piece.samePiecePosition(promotionPawn)) {\r\n                    results.push(new Piece(piece.position.clone(), pieceType,\r\n                        piece.team, true));\r\n                } else {\r\n                    results.push(piece);\r\n                }\r\n                return results;\r\n            }, [] as Piece[]);\r\n\r\n            clonedBoard.calculateAllMoves();\r\n\r\n            return clonedBoard;\r\n        })\r\n\r\n        modalRef.current?.classList.add(\"hidden\");\r\n    }\r\n\r\n    function promotionTeamType() {\r\n        return (promotionPawn?.team === TeamType.OUR) ? \"w\" : \"b\";\r\n    }\r\n    \r\n    function restartGame() {\r\n        checkmateModalRef.current?.classList.add(\"hidden\");\r\n        setBoard(initialBoard.clone());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <p style={{ color: \"white\", fontSize: \"24px\", textAlign: \"center\" }}>Total turns: {board.totalTurns}</p>\r\n            <div className=\"modal hidden\" ref={modalRef}>\r\n                <div className=\"modal-body\">\r\n                    <img onClick={() => promotePawn(PieceType.ROOK)} src={`/assets/images/rook_${promotionTeamType()}.png`} />\r\n                    <img onClick={() => promotePawn(PieceType.BISHOP)} src={`/assets/images/bishop_${promotionTeamType()}.png`} />\r\n                    <img onClick={() => promotePawn(PieceType.KNIGHT)} src={`/assets/images/knight_${promotionTeamType()}.png`} />\r\n                    <img onClick={() => promotePawn(PieceType.QUEEN)} src={`/assets/images/queen_${promotionTeamType()}.png`} />\r\n                </div>\r\n            </div>\r\n            <div className=\"modal hidden\" ref={checkmateModalRef}>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"checkmate-body\">\r\n                        <span>The winning team is {board.winningTeam === TeamType.OUR ? \"white\" : \"black\"}!</span>\r\n                        <button onClick={restartGame}>Play again</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Chessboard playMove={playMove}\r\n                pieces={board.pieces} />\r\n        </>\r\n    )\r\n}","D:\\chess\\reactjs-projects\\chess-app\\src\\Constants.ts",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\Types.ts",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\components\\Chessboard\\Chessboard.tsx",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\models\\Board.ts",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\models\\Piece.ts",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\models\\Pawn.ts",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\models\\index.ts",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\models\\Position.ts",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\referee\\rules\\index.ts",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\components\\Tile\\Tile.tsx",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\referee\\rules\\KnightRules.ts",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\referee\\rules\\PawnRules.ts",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\referee\\rules\\BishopRules.ts",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\referee\\rules\\RookRules.ts",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\referee\\rules\\QueenRules.ts",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\referee\\rules\\KingRules.ts",[],"D:\\chess\\reactjs-projects\\chess-app\\src\\referee\\rules\\GeneralRules.ts",[],{"ruleId":"99","severity":1,"message":"100","line":1,"column":10,"nodeType":"101","messageId":"102","endLine":1,"endColumn":19},{"ruleId":"99","severity":1,"message":"103","line":6,"column":22,"nodeType":"101","messageId":"102","endLine":6,"endColumn":44},{"ruleId":"99","severity":1,"message":"104","line":6,"column":46,"nodeType":"101","messageId":"102","endLine":6,"endColumn":66},{"ruleId":"99","severity":1,"message":"105","line":6,"column":68,"nodeType":"101","messageId":"102","endLine":6,"endColumn":90},{"ruleId":"99","severity":1,"message":"106","line":6,"column":92,"nodeType":"101","messageId":"102","endLine":6,"endColumn":112},{"ruleId":"99","severity":1,"message":"107","line":6,"column":114,"nodeType":"101","messageId":"102","endLine":6,"endColumn":135},{"ruleId":"99","severity":1,"message":"108","line":6,"column":137,"nodeType":"101","messageId":"102","endLine":6,"endColumn":157},{"ruleId":"99","severity":1,"message":"109","line":103,"column":14,"nodeType":"101","messageId":"102","endLine":103,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":167,"column":21,"nodeType":"112","endLine":167,"endColumn":127},{"ruleId":"110","severity":1,"message":"111","line":168,"column":21,"nodeType":"112","endLine":168,"endColumn":131},{"ruleId":"110","severity":1,"message":"111","line":169,"column":21,"nodeType":"112","endLine":169,"endColumn":131},{"ruleId":"110","severity":1,"message":"111","line":170,"column":21,"nodeType":"112","endLine":170,"endColumn":129},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getPossibleBishopMoves' is defined but never used.","'getPossibleKingMoves' is defined but never used.","'getPossibleKnightMoves' is defined but never used.","'getPossiblePawnMoves' is defined but never used.","'getPossibleQueenMoves' is defined but never used.","'getPossibleRookMoves' is defined but never used.","'isValidMove' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]